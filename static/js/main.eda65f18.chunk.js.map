{"version":3,"sources":["images/tarot.svg","data/cardData.js","components/Cards.jsx","components/Analyze.jsx","components/MakeMagic.jsx","App.js","index.js"],"names":["cardData","Cards","cardToDisplay","stackSize","useState","cards","setCards","useEffect","card","remaining","cardsArray","Array","fill","unshift","generateStack","className","map","i","items","from","transform","enter","leave","row","props","num","key","style","top","Analyze","setNum","toggleFinish","cardStack","setCardStack","setCardToDisplay","disableBtn","setDisableBtn","nextRound","length","index","Math","floor","random","newCard","newCardSet","splice","swapCards","setTimeout","onClick","disabled","MakeMagic","toggleStart","finish","setFinish","App","start","setStart","src","cardSvg","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eda65f18.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tarot.6d36f651.svg\";","export const cardData = [\n  [\n    [1, 3, 5, 7],\n    [9, 11, 13, 15],\n    [17, 19, 21, 23],\n    [25, 27, 29, 31],\n    [33, 35, 37, 39],\n    [41, 43, 45, 47],\n    [49, 51, 53, 55],\n    [57, 59, 61, 63],\n  ],\n  [\n    [2, 3, 6, 7],\n    [10, 11, 14, 15],\n    [18, 19, 22, 23],\n    [26, 27, 30, 31],\n    [34, 35, 38, 39],\n    [42, 43, 46, 47],\n    [50, 51, 54, 55],\n    [58, 59, 62, 63],\n  ],\n  [\n    [4, 5, 6, 7],\n    [12, 13, 14, 15],\n    [20, 21, 22, 23],\n    [28, 29, 30, 31],\n    [36, 37, 38, 39],\n    [44, 45, 46, 47],\n    [52, 53, 54, 55],\n    [60, 61, 62, 63],\n  ],\n  [\n    [8, 9, 10, 11],\n    [12, 13, 14, 15],\n    [24, 25, 26, 27],\n    [28, 29, 30, 31],\n    [40, 41, 42, 43],\n    [44, 45, 46, 47],\n    [56, 57, 58, 59],\n    [60, 61, 62, 63],\n  ],\n  [\n    [16, 17, 18, 19],\n    [20, 21, 22, 23],\n    [24, 25, 26, 27],\n    [28, 29, 30, 31],\n    [48, 49, 50, 51],\n    [52, 53, 54, 55],\n    [56, 57, 58, 59],\n    [60, 61, 62, 63],\n  ],\n  [\n    [32, 33, 34, 35],\n    [36, 37, 38, 39],\n    [40, 41, 42, 43],\n    [44, 45, 46, 47],\n    [48, 49, 50, 51],\n    [52, 53, 54, 55],\n    [56, 57, 58, 59],\n    [60, 61, 62, 63],\n  ],\n];\n","import React, { useState, useEffect } from 'react';\nimport { Transition } from 'react-spring/renderprops';\n\nfunction Cards({ cardToDisplay, stackSize }) {\n  const [cards, setCards] = useState([]);\n\n  const generateStack = (card, remaining) => {\n    let cardsArray = new Array(remaining).fill('');\n    cardsArray.unshift(card);\n    setCards(cardsArray);\n  };\n\n  useEffect(() => {\n    generateStack(cardToDisplay, stackSize);\n  }, [cardToDisplay, stackSize]);\n\n  return (\n    <div className='card-deck'>\n      {cards.map((card, i) =>\n        card !== '' ? (\n          <table className='card' key={i}>\n            <tbody>\n              <Transition\n                items={cardToDisplay}\n                from={{ transform: 'rotate(360deg)' }}\n                enter={{ transform: 'rotate(0deg)' }}\n                leave={{}}>\n                {(row) => (props) => (\n                  <tr>\n                    {row.map((num, key) => (\n                      <td style={props} key={key}>\n                        {num}\n                      </td>\n                    ))}\n                  </tr>\n                )}\n              </Transition>\n            </tbody>\n          </table>\n        ) : (\n          <div\n            key={i}\n            className='card-bg'\n            style={{\n              top: `${i * -1.5 + 15}%`,\n              transform: `rotate(${i % 2 === 0 ? i + 7 : i - 7}deg)`,\n            }}\n          />\n        )\n      )}\n    </div>\n  );\n}\n\nexport default Cards;\n","import { Fragment, useState, useEffect } from 'react';\nimport { cardData } from '../data/cardData';\nimport Cards from './Cards';\n\nexport default function Analyze({ num, setNum, toggleFinish }) {\n  const [cardStack, setCardStack] = useState(cardData);\n  const [cardToDisplay, setCardToDisplay] = useState([]);\n  const [disableBtn, setDisableBtn] = useState(null);\n\n  const swapCards = () => {\n    if (cardStack.length !== 0) {\n      let index = Math.floor(Math.random() * cardStack.length);\n      let newCard = cardStack[index];\n      let newCardSet = [...cardStack];\n      newCardSet.splice(index, 1);\n      setCardToDisplay(newCard);\n      setCardStack(newCardSet);\n    } else {\n      toggleFinish();\n    }\n  };\n\n  const nextRound = () => {\n    setDisableBtn(true);\n    swapCards();\n    setTimeout(() => {\n      setDisableBtn(false);\n    }, 700);\n  };\n\n  const clickYes = () => {\n    setNum(num + cardToDisplay[0][0]);\n    nextRound();\n  };\n\n  const clickNo = () => {\n    nextRound();\n  };\n\n  // ONLY ON-MOUNT\n  useEffect(() => {\n    nextRound();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Fragment>\n      <Cards cardToDisplay={cardToDisplay} stackSize={cardStack.length} />\n\n      <div className='controls'>\n        <p>is your number on this card?</p>\n        <button className='yes' onClick={clickYes} disabled={disableBtn}>\n          Yes\n        </button>\n        <button className='no' onClick={clickNo} disabled={disableBtn}>\n          No\n        </button>\n      </div>\n    </Fragment>\n  );\n}\n","import { useState } from 'react';\nimport Analyze from './Analyze';\n\nexport default function MakeMagic({ toggleStart }) {\n  const [num, setNum] = useState(0);\n  const [finish, setFinish] = useState(false);\n\n  const toggleFinish = () => {\n    setFinish(!finish);\n  };\n\n  if (finish) {\n    return (\n      <div className='controls push'>\n        <p>\n          Your number is <br />\n          <span className='num'>{num}</span>\n        </p>\n        <button className='finish' onClick={toggleStart}>\n          Awesome!\n        </button>\n      </div>\n    );\n  } else {\n    return <Analyze num={num} setNum={setNum} toggleFinish={toggleFinish} />;\n  }\n}\n","import { useState } from 'react';\nimport './styles/styles.css';\nimport cardSvg from './images/tarot.svg';\nimport MakeMagic from './components/MakeMagic';\n\nexport default function App() {\n  const [start, setStart] = useState(false);\n\n  const toggleStart = () => {\n    setStart(!start);\n  };\n\n  return (\n    <div className='app'>\n      <header>\n        <div className='title'>\n          <img src={cardSvg} alt='magic cards' />\n          <h1>Sixty Three</h1>\n        </div>\n        <h3>\n          <i>Think</i> of a number between <b>1 - 63</b>\n        </h3>\n      </header>\n\n      <main>\n        {start ? (\n          <MakeMagic toggleStart={toggleStart} />\n        ) : (\n          <div className='controls push'>\n            <button className='start' onClick={toggleStart}>\n              Let's Make Magic\n            </button>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}